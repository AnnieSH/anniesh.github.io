{"version":3,"sources":["menu/menu.js","home/section.js","home/home.js","App.js","serviceWorker.js","index.js"],"names":["MenuBtn","props","className","id","onClick","label","IconBtn","children","Menu","class","this","scrollToRef","homeRef","projectsRef","hobbyRef","gotoGithub","gotoLinkedIn","window","open","ref","current","scrollIntoView","behavior","block","React","Component","Section","Typography","variant","sectionRef","title","Home","AVATAR_SRC","Avatar","alt","src","App","createRef","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iSAoCA,SAASA,EAAQC,GACf,OACE,0BAAMC,UAAU,WAAWC,GAAIF,EAAME,GAAIC,QAASH,EAAMG,SACrDH,EAAMI,OAKb,SAASC,EAAQL,GACf,OACE,0BAAMC,UAAU,WAAWE,QAASH,EAAMG,SACvCH,EAAMM,UAKEC,M,uKA9CX,OACE,yBAAKC,MAAM,QACT,0BAAMN,GAAG,aACP,kBAACH,EAAD,CAASG,GAAG,WAAWE,MAAM,WAAWD,QAASM,KAAKC,YAAYD,KAAKT,MAAMW,WAC7E,kBAACZ,EAAD,CAASG,GAAG,eAAeE,MAAM,WAAWD,QAASM,KAAKC,YAAYD,KAAKT,MAAMY,eACjF,kBAACb,EAAD,CAASG,GAAG,YAAYE,MAAM,UAAUD,QAASM,KAAKC,YAAYD,KAAKT,MAAMa,aAE/E,0BAAMX,GAAG,cACP,kBAACG,EAAD,CAASH,GAAG,aAAaC,QAASM,KAAKK,YAAY,kBAAC,IAAD,OACnD,kBAACT,EAAD,CAASH,GAAG,eAAeC,QAASM,KAAKM,cAAc,kBAAC,IAAD,W,qCAO7DC,OAAOC,KAAK,mD,mCAIZD,OAAOC,KAAK,gC,kCAGFC,GACV,OAAO,WACLA,EAAIC,QAAQC,eAAe,CAACC,SAAU,SAAUC,MAAO,e,GA3B1CC,IAAMC,W,gBCWVC,E,uKATX,OACE,yBAAKjB,MAAM,WACT,kBAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAK1B,UAAU,iBAAiBiB,IAAKT,KAAKT,MAAM4B,YAAanB,KAAKT,MAAM6B,OAC3FpB,KAAKT,MAAMM,c,GALEiB,IAAMC,W,QC2CbM,E,4MAzCbC,WAAa,qK,uDAGX,OACE,yBAAK9B,UAAU,OAAOC,GAAG,WACvB,kBAAC,EAAD,CAAS0B,WAAYnB,KAAKT,MAAMW,QAASkB,MAAM,gBAC7C,kBAACG,EAAA,EAAD,CACE/B,UAAU,iBACVgC,IAAI,WACJC,IAAKzB,KAAKsB,aAJd,qZASA,kBAAC,EAAD,CAASH,WAAYnB,KAAKT,MAAMY,YAAaiB,MAAM,YACjD,yBAAK5B,UAAU,oBACb,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,MAApB,mBACA,yBAAK1B,UAAU,gBACbiC,IAAI,iBACJD,IAAI,gBAJR,iLAQF,kBAAC,EAAD,CAASL,WAAYnB,KAAKT,MAAMa,SAAUgB,MAAM,WAC9C,yBAAK5B,UAAU,oBACb,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACA,yBAAK1B,UAAU,gBAAgBiC,IAAI,iBAAiBD,IAAI,wBAF1D,8FAKA,yBAAKhC,UAAU,mBACb,kBAACyB,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACA,yBAAK1B,UAAU,gBAAgBiC,IAAI,kBAAkBD,IAAI,aAF3D,gK,GA9BSV,IAAMC,WCaVW,MAbf,WACE,IAAMxB,EAAUyB,sBACVxB,EAAcwB,sBACdvB,EAAWuB,sBAEjB,OACE,yBAAKnC,UAAU,OACb,kBAAC,EAAD,CAAMU,QAASA,EAASC,YAAaA,EAAaC,SAAUA,IAC5D,kBAAC,EAAD,CAAMF,QAASA,EAASC,YAAaA,EAAaC,SAAUA,MCD9CwB,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0edcfcc8.chunk.js","sourcesContent":["import React from 'react'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nclass Menu extends React.Component {\n  render() {\n    return (\n      <div class='menu'>\n        <span id='left-menu'>\n          <MenuBtn id='home-btn' label='Annie Hu' onClick={this.scrollToRef(this.props.homeRef)}/>\n          <MenuBtn id='projects-btn' label='Projects' onClick={this.scrollToRef(this.props.projectsRef)}/>\n          <MenuBtn id='hobby-btn' label='Hobbies' onClick={this.scrollToRef(this.props.hobbyRef)}/>\n        </span>\n        <span id='right-menu'>\n          <IconBtn id='github-btn' onClick={this.gotoGithub}><GitHubIcon/></IconBtn>\n          <IconBtn id='linkedin-btn' onClick={this.gotoLinkedIn}><LinkedInIcon/></IconBtn>\n        </span>\n      </div>\n    );\n  };\n\n  gotoLinkedIn() {\n    window.open('https://www.linkedin.com/in/annie-hu-81755ba0');\n  }\n\n  gotoGithub() {\n    window.open('https://github.com/AnnieSH');\n  }\n\n  scrollToRef(ref) {\n    return () => {\n      ref.current.scrollIntoView({behavior: 'smooth', block: 'start'})\n    };\n  }\n}\n\nfunction MenuBtn(props) {\n  return (\n    <span className='menu-btn' id={props.id} onClick={props.onClick}>\n      {props.label}\n    </span>\n  );\n}\n\nfunction IconBtn(props) {\n  return (\n    <span className='icon-btn' onClick={props.onClick}>\n      {props.children}\n    </span>\n  )\n}\n\nexport default Menu;","import React from 'react';\nimport { Typography } from '@material-ui/core';\n// import Box from '@material-ui/core/Box'\n\nclass Section extends React.Component {\n  render() {\n    return (\n      <div class='section'>\n        <Typography variant=\"h2\" className=\"section-header\" ref={this.props.sectionRef}>{this.props.title}</Typography>\n        {this.props.children}\n      </div>\n    );\n  };\n}\n\nexport default Section;","import React from 'react'\nimport Section from './section'\nimport { Avatar, Typography } from '@material-ui/core'\n\n\nclass Home extends React.Component {\n  AVATAR_SRC = \"https://media-exp1.licdn.com/dms/image/C5603AQFZ3jZm-K6YCw/profile-displayphoto-shrink_200_200/0?e=1602720000&v=beta&t=WUiBxcadwf8jplZ0osxc1GiFvYtdD5YpCVP6N0i6wvw\";\n\n  render() {\n    return (\n      <div className=\"home\" id=\"content\">\n        <Section sectionRef={this.props.homeRef} title=\"Hello World \">\n          <Avatar \n            className=\"profile-avatar\"\n            alt=\"Annie Hu\"\n            src={this.AVATAR_SRC}/>\n          I'm Annie, a software developer specializing in both back-end and front-end development using Java, Scala, or Typescript.\n          I've done internships in a start-up, VFX company, and a videogame company doing anywhere from QA automation and testing, small projects, and server  development.\n          I currently work at Electronics Arts in Vancouver, where I did my final internship, as a back-end software developer.\n        </Section>\n        <Section sectionRef={this.props.projectsRef} title='Projects'>\n          <div className='projects-section'>\n            <Typography variant=\"h4\">Run Tracker App</Typography>\n            <img className=\"project-photo\" \n              src=\"runtracker.jpg\" \n              alt=\"Run Tracker\"/>\n            Run Tracker is an Android app written in Java that records your runs' path, length, speed, and other stats. Turns out - writing software does not encourage you to exercise.\n          </div>\n        </Section>\n        <Section sectionRef={this.props.hobbyRef} title='Hobbies'>\n          <div className=\"projects-section\">\n            <Typography variant=\"h4\">Photography</Typography>\n            <img className=\"project-photo\" src=\"_DSC0834-3.jpg\" alt=\"Yaletown-Roundhouse\"/>\n            I shoot on a Sony A6000, taking pictures of the city, nature, and the occasional portrait.\n          </div>\n          <div className=\"project-section\">\n            <Typography variant=\"h4\">3D Modeling</Typography>\n            <img className=\"project-photo\" src=\"pokeball_02.png\" alt=\"Pokeball\"/>\n            Blender is a great, open-source tool. I use it for the occasional fun project and hope to get into more complex designs and simulations in the future.\n          </div>\n        </Section>\n      </div>\n    )\n  }\n\n}\n\nexport default Home","import React, { createRef } from 'react';\nimport Menu from './menu/menu';\nimport './App.css';\nimport Home from './home/home';\n\nfunction App() {\n  const homeRef = createRef();\n  const projectsRef = createRef();\n  const hobbyRef = createRef();\n\n  return (\n    <div className=\"App\">\n      <Menu homeRef={homeRef} projectsRef={projectsRef} hobbyRef={hobbyRef}/>\n      <Home homeRef={homeRef} projectsRef={projectsRef} hobbyRef={hobbyRef}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}